


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  Id                               String    @id @default(uuid())
  firstName                        String
  lastName                         String
  emailAddress                     String    @unique
  emailVerify                      Boolean   @default(false)
  verificationToken                String?
  phoneNumber                      String
  refreshToken                     String?
  passwordResetToken               String?
  passwordResetTokenExpiration     DateTime?
  emailVerificationToken           String?
  pin                              BigInt?
  emailVerificationTokenExpiration DateTime?
  location                         String
  role                             Role      @default(USER)
  password                         String
  image                            String?
  product                          Product[]
  cart                             Cart[]
  order                            Order[]
  review                           Review?
  createdAt                        DateTime  @default(now())
  updatedAt                        DateTime  @updatedAt
}

model Product {
  Id          Int        @id @default(autoincrement())
  userId      String
  user        User       @relation(fields: [userId], references: [Id])
  productName String
  Quantity    Int
  weight      Int
  slug        String
  color       String
  price       Int
  bulkPrice   Int
  views       Int
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  negotiable  Boolean    @default(false)
  category    Categories
  image       Image[]
  cart        Cart[]
  Review      Review[]
}

model Image {
  Id        String   @id @default(uuid())
  Image     String[]
  productid Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productid], references: [Id])
}

model Order {
  Id            String   @id @default(uuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [Id])
  status        Status
  transactionId String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  totalAmount   Int
}

model Cart {
  Id        String  @id @default(uuid())
  userId    String   
  productId Int     @unique
  Quantity  Int
  user      User    @relation(fields: [userId], references: [Id])
  product   Product @relation(fields: [productId], references: [Id])
}

model Review {
  Id        String   @id @default(uuid())
  comment   String
  rating    Int
  productId Int
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [Id])
  product   Product  @relation(fields: [productId], references: [Id])
}

enum Categories {
  LIVESTOCK
  CROPS
  FARM_SUPPLEMENT
  OTHER_CATEGORIES
}

enum Role {
  USER
  ADMIN
  BUYER
}

enum Status {
  COMPLETED
  PENDING
  IN_PROGRESS
  CANCELLED
}
